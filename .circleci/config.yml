# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
orbs:
  welcome: circleci/welcome-orb@0.4.1

jobs:
  # say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    # docker:
    #  - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    # steps:
    #   - checkout
    #   - run:
    #       name: "Say hello"
    #       command: "echo Hello, World!"
  variable_private:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "echo a context var that i just entered"
          command: 
            echo $Testing_env
  varibale_public:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: "echo a project var that i just entered"
          command: 
            echo $DOLLAR
  print_hello:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run:
          command: echo Hello
  print_world:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run:
          command: echo World

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  # say-hello-workflow:
  test-env-varibales:
    jobs:
      - variable_private:
          context: Testing_env_varibale
      # - say-hello
      # - print_hello
      # - print_world:
          # requires:
            # - print_hello
      # - variable_private
      - varibale_public
